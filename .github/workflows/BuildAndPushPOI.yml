name: Build And Push - POI

on:
  push:
    branches: [ main ]
  workflow_dispatch: 

jobs:

  deploy:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build apis/poi/web/ --tag openhackq3i8na21acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}
      
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USERNAME }}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD }}
        # Container registry server url
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
    
    - name: Push the Docker image
      run: docker push openhackq3i8na21acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Deploy to Azure Web App for Container'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: openhackq3i8na21poi
        slot-name: staging
        images: openhackq3i8na21acr.azurecr.io/devopsoh/api-poi:${{ github.run_number }}

  
  validate:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Validate Staging slot
      run: |
            declare -i duration=1
            declare hasUrl=""
            declare endpoint="https://openhackq3i8na21poi-staging.azurewebsites.net/api/docs/poi/index.html"

            usage() {
                cat <<END
                polling.sh [-i] [-h] endpoint
                
                Report the health status of the endpoint
                -i: include Uri for the format
                -h: help
            END
            }

            while getopts "ih" opt; do 
              case $opt in 
                i)
                  hasUrl=true
                  ;;
                h) 
                  usage
                  exit 0
                  ;;
                \?)
                 echo "Unknown option: -${OPTARG}" >&2
                 exit 1
                 ;;
              esac
            done

            shift $((OPTIND -1))

            if [[ $1 ]]; then
              endpoint=$1
            else
              echo "Please specify the endpoint."
              usage
              exit 1 
            fi 


            healthcheck() {
                declare url=$1
                result=$(curl --http2 -i $url 2>/dev/null | grep "HTTP/[12][12\.]*")
                echo $result
            }

            while [[ true ]]; do
               result=`healthcheck $endpoint` 
               declare status
               if [[ -z $result ]]; then 
                  status="N/A"
               else
                  status=${result:9:3}
               fi 
               timestamp=$(date "+%Y%m%d-%H%M%S")
               if [[ -z $hasUrl ]]; then
                 echo "$timestamp | $status "
               else
                 echo "$timestamp | $status | $endpoint " 
               fi 
               sleep $duration
            done
  
  
  
  swap:
    needs: validate
    runs-on: ubuntu-latest
    steps:
     - name: Azure PowerShell Action
       uses: Azure/powershell@v1
       with:
         inlineScript: Switch-AzureRmWebAppSlot -SourceSlotName "staging" -DestinationSlotName "production" -ResourceGroupName "openhackq3i8na21rg" -Name "openhackq3i8na21poi"