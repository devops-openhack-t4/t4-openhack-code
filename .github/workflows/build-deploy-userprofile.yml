name:  Build & Deploy UserProfile

env:
  # Using ACR
  login_server: "openhackq3i8na21acr.azurecr.io"
  repository: "devopsoh/api-userprofile"  
  resource_group: "openhackq3i8na21rg"
  build_name: "User Profile"
  app_name: "openhackq3i8na21userprofile"
  source_slot: "staging"
  target_slot: "production"
  docker_path: "apis/userprofile/"
  staging_health_url: "https://openhackq3i8na21userprofile-staging.azurewebsites.net/api/healthcheck/user"  
  production_health_url: "https://openhackq3i8na21userprofile.azurewebsites.net/api/healthcheck/user" 

  
on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - apis/userprofile/**

  workflow_dispatch: 
    
jobs:

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: apis/userprofile
        
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    
    steps:
      - name: code checkout
        uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test
      
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/github-script@0.9.0
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            })
  
  
  deployACR:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker image
        run: docker build -t ${{ env.login_server }}/${{ env.repository }}:${{github.run_number}} --build-arg build_version=${{github.run_number}} ${{ env.docker_path }}

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACR_USERNAME }}
          # Container registry password
          password: ${{ secrets.ACR_PASSWORD }}
          # Container registry server url
          login-server: ${{ env.login_server }}

      - name: Push the Docker image
        run: docker push ${{ env.login_server }}/devopsoh/api-userprofile:${{ github.run_number }}    

  
  deployWebApp:
    needs: deployACR
    runs-on: ubuntu-latest
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'openhackq3i8na21userprofile'
          slot-name: staging
          images: ${{ env.login_server }}/devopsoh/api-userprofile:${{ github.run_number }}
          
  validateWebApp:
    needs: deployWebApp
    runs-on: ubuntu-latest
    steps:
    - name: Site Health Check
      # You may pin to the exact commit or the version.
      # uses: pchalupa/site-health-check@1465433932fe6e6e51875730858e76a5d4b4df8c
      uses: pchalupa/site-health-check@v1.0.2
      with:
        # Site URL
        url: ${{ env.staging_health_url }}  
  
  swap:
    needs: validateWebApp
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI Action
        uses: Azure/cli@v1
        with:
        # Specify the script here
          inlineScript: az webapp deployment slot swap -g ${{ env.resource_group }} -n ${{ env.app_name }} --slot ${{ env.source_slot }} --target-slot ${{ env.target_slot }}

  rollback:
    needs: swap
    runs-on: ubuntu-latest
    steps:
      - name: Site Health Check
        # You may pin to the exact commit or the version.
        # uses: pchalupa/site-health-check@1465433932fe6e6e51875730858e76a5d4b4df8c
        uses: pchalupa/site-health-check@v1.0.2
        with:
          # Site URL
          url: ${{ env.production_health_url }}/temp.html

      - name: Azure Login
        if:  failure()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI Action
        if:  failure()
        uses: Azure/cli@v1
        with:
        # Specify the script here
          inlineScript: az webapp deployment slot swap -g ${{ env.resource_group }} -n ${{ env.app_name }} --slot ${{ env.source_slot }} --target-slot ${{ env.target_slot }}
