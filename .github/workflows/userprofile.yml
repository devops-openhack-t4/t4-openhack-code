name: Deploy UserProfile

on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - apis/userprofile/**

  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['3.1.x']

    steps:
      - name: code checkout
        uses: actions/checkout@v2
    
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: Install dependencies
        run: dotnet restore apis/userprofile/web/userprofile.csproj
      
      - name: Build
        run: dotnet build apis/poi/web/userprofile.csproj --configuration Release --no-restore
      
      - name: Install dependencies for unit tests
        run: dotnet restore apis/userprofile/tests/UnitTests/UnitTests.csproj
      
      - name: Build unit tests
        run: dotnet build apis/userprofile/tests/UnitTests/UnitTests.csproj --configuration Release --no-restore
      
      - name: Test
        run: dotnet test apis/userprofile/tests/UnitTests --no-restore --verbosity normal
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/github-script@0.9.0
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            })
  deployACR:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag devopsoh/api-userprofile:${{ github.run_number }}

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACR_username }}
          # Container registry password
          password: ${{ secrets.ACR_password }}
          # Container registry server url
          login-server: ${{ secrets.ACR_login_server }}

      - name: Push the Docker image
        run: docker push openhackq3i8na21acr.azurecr.io/devopsoh/api-userprofile:${{ github.run_number }}    

  deployWebApp:
    needs: deployACR
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag devopsoh/api-userprofile:${{ github.run_number }}
