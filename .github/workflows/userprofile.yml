name: Deploy UserProfile

on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - apis/userprofile/**

  workflow_dispatch: 
  
  

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    
    steps:
      - name: code checkout
        uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build /apis/userprofile/ --if-present
      - run: npm test /apis/userprofile/
      
      #- name: npm install and build webpack
      #  run: |
      #    npm install
      #    npm start
      
      #- name: Install dependencies
      #  run: dotnet restore apis/userprofile/web/userprofile.csproj
      
      #- name: Build
      #  run: npm run build apis/userprofile/web/userprofile.csproj --configuration Release --no-restore
      
      #- name: Install dependencies for unit tests
      #  run: npm run restore apis/userprofile/tests/UnitTests/UnitTests.csproj
      
      #- name: Build unit tests
      #  run: npm run build apis/userprofile/tests/UnitTests/UnitTests.csproj --configuration Release --no-restore
      
      #- name: Test
      #  run: npm run test apis/userprofile/tests/UnitTests --no-restore --verbosity normal
        
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/github-script@0.9.0
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            })
  
  
  deployACR:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag devopsoh/api-userprofile:${{ github.run_number }}

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACR_USERNAME }}
          # Container registry password
          password: ${{ secrets.ACR_PASSWORD }}
          # Container registry server url
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Push the Docker image
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/devopsoh/api-userprofile:${{ github.run_number }}    

  
  deployWebApp:
    needs: deployACR
    runs-on: ubuntu-latest
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'openhackq3i8na21userprofile'
          slot-name: staging
          images: ${{ secrets.ACR_LOGIN_SERVER }}/devopsoh/api-userprofile:${{ github.run_number }}
